# Production application composition override file for chmmarketingportal.com retail website app.
#
# Builds the full application from 3 images - web (rails app), db (currently mysql, and nginx)
#
# Webapp and nginx configuration files are added during the docker image build and remain contained in the image.  The
# db files are mounted from the host.  The db database files survive new container builds/deploys.
#
# This file:
#   - Allows for lifecycle management of the app - start, stop, restart, initial up, pulling of new container versions, etc.
#   - Adds prod-specific env var overrides
#   - Runs nginx as a static content server for prod mode
#   - Exposes log files to host filesystem for production monitoring
#   - In contrast to dev, this composition disallows accessing db and rails ports directly
#   - Currently specified 1 thread per worker process.  This must remain like this until the app is tested in multi-threaded mode
#   - Uses our own nginx docker image that contains the files it needs to avoid exposing configuration to the host OS for prod mode
#   - Pulls the web image from the CHM docker repository
#
# Requires docker-compose 1.6+
#
# This file extends/overrides the base docker-compose.yml file.
#
version: '2'
services:
  web:
    environment:
      - RACK_ENV=production
      - RAILS_ENV=production
      - RAILS_SERVE_STATIC_FILES=true
  db:
    environment:
      - DB_NAME=portal_prod
volumes:
  retail-portal-db:
    driver: nfs
    driver_opts:
      share: 10.254.4.119:/webdata/retail-portal/db/production
